"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
exports.default = utils_1.createRule("prefer-plus-quantifier", {
    meta: {
        docs: {
            description: "enforce using `+` quantifier",
            recommended: true,
        },
        fixable: "code",
        schema: [],
        messages: {
            unexpected: 'Unexpected quantifier "{{expr}}". Use "+" instead.',
        },
        type: "suggestion",
    },
    create(context) {
        const sourceCode = context.getSourceCode();
        function createVisitor(node) {
            return {
                onQuantifierEnter(qNode) {
                    if (qNode.min === 1 && qNode.max === Infinity) {
                        const [startOffset, endOffset] = utils_1.getQuantifierOffsets(qNode);
                        const text = qNode.raw.slice(startOffset, endOffset);
                        if (text !== "+") {
                            context.report({
                                node,
                                loc: utils_1.getRegexpLocation(sourceCode, node, qNode, [startOffset, endOffset]),
                                messageId: "unexpected",
                                data: {
                                    expr: text,
                                },
                                fix(fixer) {
                                    const range = utils_1.getRegexpRange(sourceCode, node, qNode);
                                    if (range == null) {
                                        return null;
                                    }
                                    return fixer.replaceTextRange([
                                        range[0] + startOffset,
                                        range[0] + endOffset,
                                    ], "+");
                                },
                            });
                        }
                    }
                },
            };
        }
        return utils_1.defineRegexpVisitor(context, {
            createVisitor,
        });
    },
});
