"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
exports.default = utils_1.createRule("prefer-t", {
    meta: {
        docs: {
            description: "enforce using `\\t`",
            recommended: true,
        },
        fixable: "code",
        schema: [],
        messages: {
            unexpected: 'Unexpected character "{{expr}}". Use "\\t" instead.',
        },
        type: "suggestion",
    },
    create(context) {
        const sourceCode = context.getSourceCode();
        function createVisitor(node, arrows) {
            return {
                onCharacterEnter(cNode) {
                    if (cNode.value === utils_1.CP_TAB &&
                        cNode.raw !== "\\t" &&
                        !arrows.includes(cNode.raw)) {
                        context.report({
                            node,
                            loc: utils_1.getRegexpLocation(sourceCode, node, cNode),
                            messageId: "unexpected",
                            data: {
                                expr: cNode.raw,
                            },
                            fix(fixer) {
                                const range = utils_1.getRegexpRange(sourceCode, node, cNode);
                                if (range == null) {
                                    return null;
                                }
                                return fixer.replaceTextRange(range, "\\t");
                            },
                        });
                    }
                },
            };
        }
        return utils_1.defineRegexpVisitor(context, {
            createLiteralVisitor(node) {
                return createVisitor(node, []);
            },
            createSourceVisitor(node) {
                return createVisitor(node, ["\t"]);
            },
        });
    },
});
